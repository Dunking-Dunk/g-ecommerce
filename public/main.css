/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.dg.ac {
  z-index: 99999 !important;
}

.detail__figure__image, .detail__wrapper, .products__carousel, [data-slides], .collections__products, .collections__wrapper, .home__link__icon__item, .home__link__icon, .home__images__media__image, .home__images, .home__main__media__image, .home__wrapper, .navigation__wrapper, .navigation, .preloader, .content, body, .detail, .collections, .home {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.preloader {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.navigation__list__item__link {
  font-family: "Bebas Neue";
  font-size: 1.8rem;
}
@media (max-width: 767px) {
  .navigation__list__item__link {
    font-size: 2.8rem;
  }
}

.detail__information__item .detail__information__item__title, .collections__navigation__text, .home__link {
  font-family: "Bebas Neue";
  font-size: 2.8rem;
}
@media (max-width: 767px) {
  .detail__information__item .detail__information__item__title, .collections__navigation__text, .home__link {
    font-size: 3.2rem;
  }
}

.navigation__title {
  font-family: "Bebas Neue";
  font-size: 4rem;
}

.preloader__text span span {
  font-family: "Pacifico";
  font-size: 7.2rem;
  line-height: 1.5;
}

.detail__information__title, .products__carousel__information__title, .products__carousel__information__index, .collections__title, .preloader__number {
  font-family: "Bebas Neue";
  font-size: 12.8rem;
}

.detail__information__item .detail__information__item__description, .products__carousel__information__description, body {
  font-size: 1.6rem;
}
@media (max-width: 767px) {
  .detail__information__item .detail__information__item__description, .products__carousel__information__description, body {
    font-size: 2.8rem;
  }
}

.detail, .collections, .home {
  opacity: 0;
  visibility: hidden;
}

@font-face {
  font-family: "Roboto";
  src: url(68a9900f0dcd48f0aaf8.woff2) format("woff2"), url(0944be1093c62cedb919.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Bebas Neue";
  src: url(cf44d2c44a2408c82752.woff2) format("woff2"), url(16888f91cccc75fe2f3c.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Pacifico";
  src: url(f9d280e947224164ebef.woff2) format("woff2"), url(6967db7c4836863c65ea.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  position: fixed;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  font-family: "Roboto";
  position: fixed;
  background-color: #1363DF;
}

a {
  text-decoration: none;
  outline: none;
  color: inherit;
}

button {
  color: inherit;
  background: none;
  cursor: pointer;
  outline: none;
  border: none;
}

img {
  vertical-align: middle;
  opacity: 0;
  transition: opacity 0.4s ease;
}
img.loaded {
  opacity: 1;
}

.preloader {
  background-color: #1363DF;
  color: #DFF6FF;
  z-index: 3;
}
@media (max-width: 767px) {
  .preloader {
    display: flex;
    flex-direction: column-reverse;
  }
}

.preloader__text {
  font-size: 0;
  flex: 1;
  text-transform: uppercase;
  text-align: left;
}
.preloader__text span {
  display: inline-block;
}
@media (max-width: 767px) {
  .preloader__text {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    flex-direction: column;
    overflow: hidden;
  }
}

.preloader__loader {
  flex: 1;
  overflow: hidden;
}
@media (max-width: 767px) {
  .preloader__loader {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    overflow: hidden;
  }
}

.navigation {
  z-index: 2;
  position: fixed;
  color: #DFF6FF;
  pointer-events: none;
}

.navigation__title {
  position: absolute;
  pointer-events: auto;
  left: 4rem;
  transition: opacity 0.5s ease;
  top: 2.5rem;
  opacity: 1;
}
.navigation__title:hover {
  opacity: 0.5;
}

.navigation__list__item {
  position: absolute;
  right: 4rem;
  list-style: none;
  pointer-events: auto;
  top: 3rem;
}

.navigation__list__item__link {
  display: block;
}

.home {
  color: #47B5FF;
  overflow: hidden;
}
.home::after, .home::before {
  content: "";
  height: 50rem;
  left: 0;
  position: absolute;
  width: 100%;
  z-index: 1;
}
.home::before {
  background: linear-gradient(to bottom, #47B5FF 0%, rgba(71, 181, 255, 0) 100%);
  top: 0;
}
.home::after {
  background: linear-gradient(to top, #47B5FF 0%, rgba(71, 181, 255, 0) 100%);
  bottom: 0;
}

.home__main__media {
  position: absolute;
  z-index: 1;
  width: 47.6rem;
  height: 47.6rem;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.home__main__media__image {
  object-fit: cover;
}

.home__images {
  height: 172.5rem;
  width: 100%;
  position: relative;
  visibility: hidden;
}
@media (max-width: 767px) {
  .home__images {
    left: -50%;
  }
}

.home__images__media {
  position: absolute;
}
.home__images__media:nth-child(1) {
  left: 5.2rem;
  top: 11.8rem;
  width: 39.2rem;
  height: 31.2rem;
}
.home__images__media:nth-child(2) {
  left: 47.1rem;
  top: 2.5rem;
  width: 36.4rem;
  height: 67.2rem;
}
.home__images__media:nth-child(3) {
  left: 87.4rem;
  top: 4.3rem;
  width: 99.8rem;
  height: 34.4rem;
}
.home__images__media:nth-child(4) {
  left: 5.1rem;
  top: 44.9rem;
  width: 39.2rem;
  height: 26.9rem;
}
.home__images__media:nth-child(5) {
  left: 87.4rem;
  top: 43.1rem;
  width: 41.4rem;
  height: 63.9rem;
}
.home__images__media:nth-child(6) {
  left: 131.6rem;
  top: 42.1rem;
  width: 55.7rem;
  height: 65rem;
}
.home__images__media:nth-child(7) {
  left: 5.2rem;
  top: 73.3rem;
  width: 78.3rem;
  height: 33.7rem;
}
.home__images__media:nth-child(8) {
  left: 136.2rem;
  top: 108.8rem;
  width: 51.1rem;
  height: 78rem;
}
.home__images__media:nth-child(9) {
  left: 47.3rem;
  top: 108.8rem;
  width: 85.3rem;
  height: 40.5rem;
}
.home__images__media:nth-child(10) {
  left: 47.3rem;
  top: 108.8rem;
  width: 85.3rem;
  height: 40.5rem;
}
.home__images__media:nth-child(11) {
  left: 51.5rem;
  top: 153.6rem;
  width: 80.1rem;
  height: 35.2rem;
}
.home__images__media:nth-child(12) {
  left: 5.3rem;
  top: 153.6rem;
  width: 42.2rem;
  height: 35.2rem;
}
.home__images__media:nth-child(13) {
  left: 2.3rem;
  top: 108.6rem;
  width: 42.2rem;
  height: 35.2rem;
}

.home__images__media__image {
  object-fit: cover;
}

.home__link {
  pointer-events: auto;
  bottom: 10rem;
  height: 6rem;
  left: 50%;
  letter-spacing: 0.05rem;
  position: absolute;
  width: 28.8rem;
  text-transform: uppercase;
  transform: translateX(-50%);
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #DFF6FF;
}
@media (max-width: 767px) {
  .home__link {
    bottom: 7.5rem;
    height: 13.7rem;
    width: 55rem;
  }
}

.collections {
  height: 100vh;
}

.collections__title {
  position: absolute;
  color: #47B5FF;
  left: 10%;
  top: 20%;
  text-decoration-line: underline;
  text-decoration-color: #DFF6FF;
  text-decoration-thickness: 0.5rem;
}
@media (max-width: 767px) {
  .collections__title {
    padding: 10rem 0 0 0;
    top: 0%;
    left: 1%;
  }
}

.collections__navigation {
  display: flex;
  border-radius: 4rem;
  padding: 2rem;
  position: absolute;
  max-width: 990.15px;
  max-height: 69.58px;
  left: 50%;
  top: 15%;
  transform: translateX(-50%);
  background-color: #47B5FF;
  z-index: 2;
  overflow-x: scroll;
}
.collections__navigation::-webkit-scrollbar {
  max-width: 5px;
  max-height: 5px;
  border-radius: 4rem;
  display: none;
}
@media (max-width: 767px) {
  .collections__navigation {
    max-width: 300.15px;
  }
  .collections__navigation::-webkit-scrollbar {
    display: none;
  }
}

.collections__navigation__text {
  color: #DFF6FF;
  padding: 0rem 2rem;
  border-right: 1px solid #DFF6FF;
}

.products__carousel {
  display: flex;
  align-items: center;
  justify-content: center;
  transition: opacity 0.35s ease;
  opacity: 0;
  inset: 0;
  cursor: pointer;
}
@media (max-width: 767px) {
  .products__carousel {
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    justify-content: center;
  }
}

[data-active] {
  opacity: 1;
  z-index: 1;
}

.products__carousel__information {
  width: 50%;
  height: 100%;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  flex-direction: column;
  margin-left: 22rem;
  margin-top: 10rem;
  color: #47B5FF;
}
@media (max-width: 767px) {
  .products__carousel__information {
    flex: 1;
    margin-top: 1rem;
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    margin-left: 3rem;
  }
}

.products__carousel__information__index {
  text-align: start;
}

.products__carousel__information__title {
  margin-top: 1rem;
  margin-right: 0.5rem;
}
@media (max-width: 767px) {
  .products__carousel__information__title {
    margin-top: 0;
  }
}

.products__carousel__information__description {
  color: #DFF6FF;
  margin-top: 1;
  max-width: 50rem;
}
@media (max-width: 767px) {
  .products__carousel__information__description {
    visibility: hidden;
  }
}

.products__carousel__gallery__media {
  margin-right: 22rem;
  margin-top: 10rem;
}
@media (max-width: 767px) {
  .products__carousel__gallery__media {
    display: flex;
    align-items: flex-end;
    flex: 1.5;
    margin-right: 0rem;
  }
}

.products__carousel__gallery__media__image {
  height: 60rem;
  width: 80rem;
  object-fit: cover;
}
@media (max-width: 767px) {
  .products__carousel__gallery__media__image {
    height: 40rem;
  }
}

.products__carousel__btn {
  top: 50%;
  transform: translateY(-50%);
  background-color: transparent;
  position: absolute;
  height: 40rem;
  width: 10rem;
  z-index: 2;
}
.products__carousel__btn.right {
  right: 2%;
}
.products__carousel__btn.left {
  left: 2%;
}
@media (max-width: 767px) {
  .products__carousel__btn svg {
    height: 5rem;
    width: 5rem;
  }
  .products__carousel__btn.right {
    right: 1%;
  }
  .products__carousel__btn.left {
    left: 1%;
  }
}

.collections__slider {
  display: block;
  position: absolute;
  left: 50%;
  bottom: 5%;
  transform: translateX(-50%);
  width: 66rem;
  height: 1.3rem;
  background-color: #DFF6FF;
  border-radius: 2rem;
  overflow: hidden;
}
@media (max-width: 767px) {
  .collections__slider {
    bottom: 8%;
  }
}
.collections__slider .collections__slider__element {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0%;
  z-index: 1;
  background-color: #47B5FF;
}

.detail__wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
}
@media (max-width: 767px) {
  .detail__wrapper {
    flex-direction: column;
  }
}

.detail__figure {
  width: 50%;
  position: relative;
  width: 81rem;
  min-height: 40rem;
}

.detail__figure__image {
  object-fit: contain;
}

.detail__information {
  width: 50%;
  display: flex;
  flex-direction: column;
  min-height: 50rem;
  width: 72rem;
  margin-left: 8rem;
}
@media (max-width: 767px) {
  .detail__information {
    margin-left: 1rem;
    margin-top: 5rem;
  }
}

.detail__information__title {
  color: #47B5FF;
  margin-bottom: 1rem;
}

.detail__information__item {
  margin-bottom: 2rem;
}
@media (max-width: 767px) {
  .detail__information__item {
    margin-bottom: 4rem;
  }
}
.detail__information__item .detail__information__item__title {
  color: #47B5FF;
  margin-bottom: 0.5rem;
}
.detail__information__item .detail__information__item__description {
  color: #DFF6FF;
  max-width: 50rem;
}
.detail__information__item .detail__information__stock {
  display: block;
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
}

.detail__navigation__btn {
  position: absolute;
  top: 10%;
  left: 5%;
}
@media (max-width: 767px) {
  .detail__navigation__btn {
    top: 5%;
  }
  .detail__navigation__btn svg {
    height: 10rem;
    width: 10rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/